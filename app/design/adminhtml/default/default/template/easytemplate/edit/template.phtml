<?php /** @var $this Webguys_Easytemplate_Block_Adminhtml_Cms_Page_Edit_Tab_Templates */ ?>
<?php /** @var $this Webguys_Easytemplate_Block_Adminhtml_Cms_Block_Edit_Tab_Templates */ ?>

<?php if (Mage::getSingleton('cms/wysiwyg_config')->isEnabled()): ?>
    <script type="text/javascript">
        var easytinyMceWysiwygSetup = Class.create(tinyMceWysiwygSetup, {
            setup: function (mode) {
                var settings = this.getSettings(mode);

                settings.theme_advanced_buttons1 = "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,styleselect,formatselect";
                settings.theme_advanced_buttons2 = "bullist,numlist,|,outdent,indent,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code";
                settings.theme_advanced_buttons3 = "hr,removeformat,visualaid,|,sub,sup,|,charmap";
                settings.theme_advanced_buttons4 = null;

                tinyMCE.init(settings);
            }
        });
    </script>
<?php endif; ?>
<div class="entry-edit easy-templates">
    <?php if (!$this->isInTemplateMode()) : ?>
        <div id="dynamic-template-warrning">
            <ul class="messages">
                <li class="error-msg">
                    <ul>
                        <li><?php echo $this->__(
                                'Output is not set to EasyTemplate. This content will not be available on frontend'
                            ) ?></li>
                    </ul>
                </li>
            </ul>
        </div>
    <?php endif; ?>

    <?php if($this->getGroup()->getId()): ?>
        <div class="box" style="display:none;">

            <input type="hidden" id="easytemplate_action" name="easytemplate_action" value=""/>

            <?php if ($this->getGroup()->getCopyOf()) : ?>

                <button
                        onclick="$('easytemplate_action').value='publish'; editForm.submit($(editForm.formId).action + 'back/edit/active_tab/easy_template')"
                        class="scalable save" type="button">
                <span>
                    <span><?php echo Mage::helper('easytemplate')->__('Publish Working Copy'); ?></span>
                </span>
                </button>
                <button
                        onclick="$('easytemplate_action').value='reset'; editForm.submit($(editForm.formId).action + 'back/edit/active_tab/easy_template')"
                        class="scalable" type="button">
                <span>
                    <span><?php echo Mage::helper('easytemplate')->__('Discard Working Copy'); ?></span>
                </span>
                </button>

                <?php if ($this->getGroup()->getFrontendUrl()) : ?>
                    <button
                            onclick="window.open('<?php echo $this->getGroup()->getFrontendUrl() ?>');"
                            class="scalable" type="button">
                    <span>
                        <span><?php echo Mage::helper('easytemplate')->__('Preview Working Copy'); ?></span>
                    </span>
                    </button>
                <?php endif; ?>

            <?php else : ?>
                <button
                        onclick="$('easytemplate_action').value='clone'; editForm.submit($(editForm.formId).action + 'back/edit/active_tab/easy_template')"
                        class="scalable add" type="button">
                    <span>
                        <span><?php echo Mage::helper('easytemplate')->__('Create Working Copy'); ?></span>
                    </span>
                </button>
            <?php endif; ?>

        </div>
    <?php endif; ?>

    <div class="entry-edit-head">
        <h4><?php echo Mage::helper('easytemplate')->__('Templates') ?></h4>

        <div class="right">
            <button onclick="$('easy_template_selector').show();" class="scalable add" type="button"
                    title="<?php echo Mage::helper('easytemplate')->__('Add New Template'); ?>">
            <span>
                <span><?php echo Mage::helper('easytemplate')->__('Add New Template'); ?></span>
            </span>
            </button>
        </div>
    </div>

    <div id="easy_template_selector" style="display: none;">
        <?php echo $this->getChildHtml('selection'); ?>
    </div>
    <div style="clear:both;"></div>

    <div id="easy_templates_container" class="box">
        <div id="easy_templates_container_top"></div>
        <?php echo $this->getExistingTemplatesHtml(); ?>
    </div>

    <div class="entry-edit-head">
        <h4>
            <?php echo $this->__('Import & Export'); ?>
        </h4>
    </div>
    <div class="box">
        <div>
            <h4>
                <?php echo $this->__('Import Templates'); ?>
            </h4>

            <input name="template_archive" class="input-file" type="file">

            <button
                    onclick="$('easytemplate_action').value='upload'; editForm.submit( $(editForm.formId).action+'back/edit/active_tab/easy_template' )"
                    class="scalable save" type="button">
            <span>
                <span>
                    <?php echo Mage::helper('easytemplate')->__('Import from ZIP-File'); ?>
                </span>
            </span>
            </button>
        </div>

        <div style="margin-top: 15px">
            <h4>
                <?php echo $this->__('Export Templates'); ?>
            </h4>

            <button
                    onclick="$('easytemplate_action').value='download'; editForm.submit( $(editForm.formId).action+'back/edit/active_tab/easy_template' );  setTimeout(function(){ $('loading-mask').hide() }, 3000);"
                    class="scalable" type="button">
            <span>
                <span>
                    <?php echo Mage::helper('easytemplate')->__('Export to ZIP-File'); ?>
                </span>
            </span>
            </button>
        </div>

        <div style="clear: both"></div>
    </div>

    <script type="text/javascript">
        // <![CDATA[
        function useEasyTemplate() {
            // Page mode
            if ($('page_content')) {
                $('page_content').addClassName('ignore-validate');
                $('page_tabs_content_section').hide();
            }

            // Block mode
            if ($('block_content')) {
                $('block_content').addClassName('ignore-validate');
                $('block_tabs_content_section').hide();
            }
        }

    var SortableObserver = Class.create({
        initialize: function(element, observer) {
            this.element   = $(element);
            this.observer  = observer;
            this.lastValue = Sortable.serialize(this.element);
            easytemplateDisableTinymce();
        },

        onStart: function() {
            this.lastValue = Sortable.serialize(this.element);
            easytemplateDisableTinymce();
        },

        onEnd: function() {
            easytemplateEnableTinyMce();
            Sortable.unmark();
            if(this.lastValue != Sortable.serialize(this.element))
                this.observer(this.element)
        }
    });function sortableUpdate() {
        var i = 1;
        $$('#easy_templates_container div').each(function(c){
            if(c.hasClassName('template-box') && !c.hasClassName('no-display')) {
                $( c.id + '_sort_order').value = i;
                i++;
            }
        });
        Sortable.create("easy_templates_container", {
            tag: 'div',
            treeTag: 'div',
            onUpdate: sortableUpdate
        });

            $$('#easy_templates_container .reference_fields div').each(function(c){
                if(c.hasClassName('template-box') && !c.hasClassName('no-display')) {
                    $( c.id + '_sort_order').value = i;
                    i++;
                }
            });
            $$('#easy_templates_container .reference_fields').each(function(c){
                Sortable.destroy(c);
                Sortable.create(c, {
                    tag: 'div',
                    treeTag: 'div',
                    onUpdate: sortableUpdate
                });
            });

        }
        sortableUpdate();

        function easytemplate_initial()
        {
            if (typeof editForm == 'undefined') {
                editForm = categoryForm;
            }

            $(editForm.formId).writeAttribute('enctype', 'multipart/form-data');

            // Page mode
            if ($('page_view_mode') && $('page_view_mode').value == 'easytemplate') {
                useEasyTemplate();
            }

            // Block mode
            if ($('block_view_mode') && $('block_view_mode').value == 'easytemplate') {
                useEasyTemplate();
            }

            // Category mode
            if ($$('select[name=general[use_easytemplate]]').first() && $$('select[name=general[use_easytemplate]]').first().value) {
                useEasyTemplate();
            }
        }

        document.observe("dom:loaded", function () {
            easytemplate_initial();
        });

        Ajax.Responders.register({
            onComplete: function() {
                easytemplate_initial();
            }
        });

        // ]]>
    </script>

    <script type="text/javascript">
        //<![CDATA[
        templates = <?php echo json_encode($this->getEmptyTemplates()); ?>;
        //]]>
    </script>

    <script type="text/javascript">
        //<![CDATA[

        easyTemplate = {
            div : $('easy_templates_container_top'),
            templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
            itemCount : 1,
            add: function (code, label, parentContainer) {

                if (typeof parentContainer === "undefined") parentContainer = false;

                this.itemCount++;

                data = {};
                data.id = 'new_' + this.itemCount;
                data.code = code;
                data.name = label;
                data.label = label;
                data.active = 1;

                if (parentContainer) {
                    data.parent_id = parentContainer.up('.template_container').select('.js-parentfield')[0].value;
                } else {
                    parentContainer = this.div;
                    data.parent_id = 0;
                }

                if (template = templates[code]) {

                    this.secondTemplate = new Template(template, this.templateSyntax);

                    var content = this.secondTemplate.evaluate(data);
                    Element.insert(parentContainer, content);

                    content.evalScripts();
                }

                $('easy_template_selector').hide();

                sortableUpdate();
                useEasyTemplate();

                // TODO: Remove duplicate logic here and in box.phtml
                $('template_content_' + data.id).show();

                $(data.id).hide();
                $(data.id+'_top').show();

                this.bindRemoveButtons();
                this.bindDateTimeChangeEvents();
                this.bindActiveChangeEvents();
            },
            remove: function (event) {
                var element = $(Event.findElement(event, 'div.template-box'));
                if (element) {
                    $(element.readAttribute('id') + '_' + 'is_delete').value = '1';
                    element.addClassName('no-display');
                    element.addClassName('ignore-validate');
                    element.hide();
                }
                sortableUpdate();
            },
            removeProductSelection: function(code, id) {
                var label = 'template_field_' + code + '_' + id + 'label';
                $(label).update('-');

                var value = 'template_field_' + code + '_' + id + 'value';
                $(value).value = '';

                var remove = 'template_field_' + code + '_' + id + 'remove';
                $(remove).style.display = 'none';
            },
            dateTimeChanged: function (event) {

                var dateTimeTarget = null;
                var sourceElement = event.srcElement;
                var sourceId = sourceElement.readAttribute('id');

                if (sourceId.indexOf('from') > -1) {
                    dateTimeTarget = 'span.valid-from';
                } else if (sourceId.indexOf('to') > -1) {
                    dateTimeTarget = 'span.valid-to';
                }

                var element = $(Event.findElement(event, 'div.template-box'));
                if (dateTimeTarget && element) {
                    element.down(dateTimeTarget).update(sourceElement.value);
                }
            },
            activeChanged: function (event) {
                var sourceElement = event.srcElement;

                var element = $(Event.findElement(event, 'div.template-box'));
                if (element) {
                    if (sourceElement.checked) {
                        element.removeClassName('inactive');
                    }
                    else {
                        element.addClassName('inactive');
                    }
                }
            },
            bindRemoveButtons: function () {
                var buttons = $$('div.easy-templates .delete-easy-template');
                for (var i = 0; i < buttons.length; i++) {
                    if (!$(buttons[i]).binded) {
                        $(buttons[i]).binded = true;
                        Event.observe(buttons[i], 'click', this.remove.bind(this));
                    }
                }
            },
            bindDateTimeChangeEvents: function () {
                var inputFields = $$('div.easy-templates input.datetime-input');
                for (var i = 0; i < inputFields.length; i++) {
                    if (!$(inputFields[i]).binded) {
                        $(inputFields[i]).binded = true;
                        Event.observe(inputFields[i], 'change', this.dateTimeChanged.bind(this));
                    }
                }
            },
            bindActiveChangeEvents: function () {
                var inputFields = $$('div.easy-templates input.active-input');
                for (var i = 0; i < inputFields.length; i++) {
                    if (!$(inputFields[i]).binded) {
                        $(inputFields[i]).binded = true;
                        Event.observe(inputFields[i], 'change', this.activeChanged.bind(this));
                    }
                }
            }
        };

        easyTemplate.bindRemoveButtons();
        easyTemplate.bindDateTimeChangeEvents();
        easyTemplate.bindActiveChangeEvents();

        //]]>
    </script>

</div>

<script type="text/javascript">
    // re-bind form elements onchange
    varienWindowOnload(true);
</script>
